"Fuel Flow Engine 2 [Kg/h]",
"Radio Altitude System 2 [ft]",
"Exahust Gas Temperature Engine 1 [degC]",
"Exahust Gas Temperature Engine 2 [degC]",
"Longitudinal Acceleration [g]",
"Pitch Acceleration [deg/sec^2}",
"Pitch Command Captain [deg]",
"Pitch Command First Officer [deg]",
"Pitch Angle [deg]",
"Pitch Rate [deg/sec]",
"Ground Speed SI Units [m/sec]",
"Acceleration derived from Ground Speed [m/sec^2]",
"Filtered acceleration from Ground Speed [m/sec^2]",
"Longitudinal Acceleration SI units [m/sec^2]",
"Flex temperature System 1",
"Flex temperature System 2",
"Static Air Temperature",
"Total Air Temperature",
"Thrust Lever Position Eng 1",
"Thrust Lever Position Eng 2",
"Thrust Lever Angle Eng 1",
"Thrust Lever Angle Eng 2",
"Dynamic Pressure Sys 1 [mBar]",
"Dynamic Pressure Sys 2 [mBar]",
"Total Pressure Sys 1 [mBar]",
"Total Pressure Sys 2 [mBar]",
"Selected P0 Eng1 (Amb Press) [psia]",
"Selected P0 Eng2 (Amb Press) [psia]",
"Gross Weight [Kg]",
"PT2 Fan Inlet Press Eng 1 [psia]",
"PT2 Fan Inlet Press Eng 2 [psia]",
"PS3 HPC Exit Press Eng 1 [psia]",
"PS3 HPC Exit Press Eng 2 [psia]",
"Fan Inlet Temp Eng 1 [degC]",
"Fan Inlet Temp Eng 2 [degC]",
"LPC Exit Temp Eng 1 [degC]",
"LPC Exit Temp Eng 1 [degC]",
"Magnetic Heading [deg]",
"Flight Phase ( From FWC)",
"Altitude Standard [ft]",
"Vertical Acceleration [g]",
"Flight Path Acceleration",
"Wind Speed [Knot]",
"Wind Direction [deg]",
"Landing Gear Left",
"Landing Gear Nose",
"Landing Gear Right",
"Indicated Airspeed [Knot]",
"MACH Number",
"N1 Vibration Cockpit Indication Eng #1",
"N1 Vibration Cockpit Indication Eng #2",
"N2 Vibration Cockpit Indication Eng #1",
"N2 Vibration Cockpit Indication Eng #2")
par.print <- as.data.frame(cbind(par.names, par.descr, par.origin))
names(par.print) <- c("Menemonic", "Description", "Origin")
par.table <- print(xtable(par.print, format="latex"), include.rownames=FALSE,
size="scriptsize")
# Lift-Off detection
tlg <- min(which(LG_left[t0:t1]==0))
trg <- min(which(LG_right[t0:t1]==0))
loff <- max(tlg,trg) # Lift Off according to MLG criteria
r1 <- raltd1[t0:t1]
r2 <- raltd2[t0:t1]
# loff radio alt correction
if ( r1[loff] > 1  || r2[loff] > 1) {
min <- loff - 20
max <- loff + 10
r1_positive <- min(which(r1[min:max]>0))
lo_r1 <- min + r1_positive
r2_positive <- min(which(r2[min:max]>0))
lo_r2 <- min + r2_positive
#lo_ralt <- min(lo_r1,lo_r2)
loff <- max(lo_r1,lo_r2)
}
loff_sec <- loff/8 # in seconds
# Rotation point
rot_sample <- min(which(ptcr[t0:t1]>1))
rotation_time <- (loff - rot_sample)/8
rot <- rot_sample/8 # seconds
# Values to include in the report
# integrar mais tarde em "flight_measurements"
flxtemp1 <- round(data_takeoff$FLX1_TEMP[rot_sample],1)
flxtemp2 <- round(data_takeoff$FLX2_TEMP[rot_sample],1)
tla1_pos <- data_takeoff$TLA1C[rot_sample]
tla2_pos <- data_takeoff$TLA2C[rot_sample]
gw_ini <- data_takeoff$GW1KG[1]
gw_final <- data_takeoff$GW1KG[(t1-t0)+1]
fuel_gw <- gw_ini - gw_final
time_considered <- (t1-t0)/8
# calculo de consumo atrav?s do FF - comparar com o de cima
# Graphics
# Fast Testing Command:
# > with(data_takeoff, plot(FF1, N21, type="l", col="blue")); grid(,,col="dark red")
setwd(work_dir)
setwd("output")
getwd()
png("win_spd.png")
p <- qplot(time, WIN_SPD, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]",geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("win_dir.png")
p <- qplot(time, WIN_DIR, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("p0_1.png")
p <- qplot(time, P0_1, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]", ylab="P01"  ,geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("p0_2.png")
p <- qplot(time, P0_2, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]", ylab="P02", geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("pt1.png")
p <- qplot(time, PT1, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]",  ylab="Total Press Sys 1" ,geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("pt2.png")
p <- qplot(time, PT2, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]",  ylab="Total Press Sys 2" ,geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("q1.png")
p <- qplot(time, Q1, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]",  ylab="Dynamic Press Sys 1" ,geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("q2.png")
p <- qplot(time, Q2, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]",  ylab="Dynamic Press Sys 1" ,geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("tla2c.png")
p <- qplot(time, TLA2C, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]",  ylab="Thrust Lever Position Eng 1" ,geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("tla1c.png")
p <- qplot(time, TLA1C, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]",  ylab="Thrust Lever Position Eng 1" ,geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("tla1.png")
p <- qplot(time, TLA1, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]",  ylab="Thrust Lever Position Eng 1" ,geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("tla2.png")
p <- qplot(time, TLA2, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]",  ylab="Thrust Lever Position Eng 1" ,geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("sat.png")
p <- qplot(time, SAT, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]",  ylab="Static Air Temperature [degC]" ,geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("tat.png")
p <- qplot(time, TAT, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]",  ylab="Total Air Temperature [degC]" ,geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("flx1_temp.png")
p <- qplot(time, FLX1_TEMP, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]",  ylab="Flex Temperature [degC]" ,geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("flx2_temp.png")
p <- qplot(time, FLX2_TEMP, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]",  ylab="Flex Temperature [degC]" ,geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("gs.png")
p <- qplot(time, GS, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]",  ylab="Ground Speed [Knot]" ,geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("gs_ms.png")
p <- qplot(time, GS_MS, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]",  ylab="Ground Speed [m/s]" ,geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("raltd1.png")
p <- qplot(time, RALTD1, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("raltd2.png")
p <- qplot(time, RALTD2, data=data_takeoff, col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("n11.png")
p <- qplot(time, N11, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("n12.png")
p <- qplot(time, N12, data=data_takeoff, col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size =I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off(
png("n12.png")
p <- qplot(time, N12, data=data_takeoff, col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size =I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("n11.png")
p <- qplot(time, N11, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("n12.png")
p <- qplot(time, N12, data=data_takeoff, col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size =I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("n21.png")
p <- qplot(time, N21, data=data_takeoff, col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("n22.png")
p <- qplot(time, N22, data=data_takeoff, col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("ff1.png")
p <- qplot(time, FF1, data=data_takeoff, col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("ff2.png")
p <- qplot(time, FF2, data=data_takeoff, col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("egt1.png")
p <- qplot(time, EGT1, data=data_takeoff, col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("egt2.png")
p <- qplot(time, EGT2, data=data_takeoff, col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("long.png")
p <- qplot(time, LONG, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]", ylab="LONG [g]", ylim=c(-0.05,0.35) ,geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("gsdot_filt.png")
p <- qplot(time, GSDOT_FILT, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]", ylim=c(-0.05,0.35), geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("ptcr_dot.png")
p <- qplot(time, PTCR_DOT, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("pitch_capt.png")
p <- qplot(time, PITCH_CPT, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("pitch_fo.png")
p <- qplot(time, PITCH_FO, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("pitch.png")
p <- qplot(time, PITCH, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("ptcr.png")
p <- qplot(time, PTCR, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("alt_stdc.png")
p <- qplot(time, ALT_STD, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("vrtg.png")
p <- qplot(time, VRTG, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("vrtg.png")
p <- qplot(time, VRTG, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("fpac.png")
p <- qplot(time, FPAC, data=data_takeoff,  col=I("blue"),
xlab="Time [seconds]", geom=c("line"), size=I(1)) +
geom_vline(xintercept=loff_sec, color="dark red", size=1) +
geom_vline(xintercept=rot, color="green", size=1)
print(p)
dev.off()
png("landing_gear.png")
with(data_takeoff, plot(time,LG_left, type="l", ylab="Landing Gear",col="blue",lwd=2))
with(data_takeoff, lines(time,LG_nose, type="l", col="black",lwd=2))
with(data_takeoff, lines(time,LG_right, type="l", col="brown",lwd=2))
abline(v=rot,col="green", lwd=2)
abline(v=loff_sec,col="red", lwd=2)
grid(,,col="dark red")
legend("bottomleft",legend=c("Landing Gear Left","Landing Gear Nose","Landing Gear Right")
,col=c("blue","black","brown"),bg="light blue",lwd=1, cex=1)
dev.off()
png("tla_vs_ff_eng1.png") #
with(data_takeoff, plot( TLA1, FF1, type="l", col="blue", lwd=1.5))
regress <- lm(FF1 ~ TLA1, data_takeoff)
sum_reg <- summary(regress)
abline(regress, col="red")
legend("topleft", paste("R^2 = ", round(sum_reg$r.squared,3)))
grid(,,"dark red")
dev.off()
#  setwd(resultpath)
line1 <- paste("\\","begin{verbatim}",sep="")
write(line1, file="tla_vs_ff_eng1.tex")
capture.output(sum_reg, file="tla_vs_ff_eng1.tex", append=TRUE)
line2 <- paste("\\","end{verbatim}",sep="")
write(line2, file="tla_vs_ff_eng1.tex", append=TRUE)
png("tla_vs_ff_eng2.png")
with(data_takeoff, plot( TLA2, FF2, type="l", col="blue", lwd=1.5))
regress <- lm(FF2 ~ TLA2, data_takeoff)
sum_reg <- summary(regress)
abline(regress, col="red")
legend("topleft", paste("R^2 = ", round(sum_reg$r.squared,3)))
grid(,,"dark red")
dev.off()
#  Capture information about the regression for the final report
line1 <- paste("\\","begin{verbatim}",sep="")
write(line1, file="tla_vs_ff_eng2.tex")
capture.output(sum_reg, file="tla_vs_ff_eng2.tex", append=TRUE)
line2 <- paste("\\","end{verbatim}",sep="")
write(line2, file="tla_vs_ff_eng2.tex", append=TRUE)
png("ff_vs_n2_eng1.png") #
with(data_takeoff, plot( FF1, N21, type="l", col="blue", lwd=1.5))
regress <- lm(N21 ~ FF1, data_takeoff)
sum_reg <- summary(regress)
abline(regress, col="red")
legend("topleft", paste("R^2 = ", round(sum_reg$r.squared,3)))
grid(,,"dark red")
dev.off()
#  Capture information about the regression for the final report
line1 <- paste("\\","begin{verbatim}",sep="")
write(line1, file="ff_vs_n2_eng1.tex")
capture.output(sum_reg, file="ff_vs_n2_eng1.tex", append=TRUE)
line2 <- paste("\\","end{verbatim}",sep="")
write(line2, file="ff_vs_n2_eng1.tex", append=TRUE)
png("ff_vs_n2_eng2.png") #
with(data_takeoff, plot( FF2, N22, type="l", col="blue", lwd=1.5))
regress <- lm(N22 ~ FF2, data_takeoff)
sum_reg <- summary(regress)
abline(regress, col="red")
legend("topleft", paste("R^2 = ", round(sum_reg$r.squared,3)))
grid(,,"dark red")
dev.off()
#  Capture information about the regression for the final report
line1 <- paste("\\","begin{verbatim}",sep="")
write(line1, file="ff_vs_n2_eng2.tex")
capture.output(sum_reg, file="ff_vs_n2_eng2.tex", append=TRUE)
line2 <- paste("\\","end{verbatim}",sep="")
write(line2, file="ff_vs_n2_eng2.tex", append=TRUE)
png("n1_vs_n2_eng1.png") #
with(data_takeoff, plot( N21, N11, type="l", col="blue", lwd=1.5))
regress <- lm(N11 ~ N21, data_takeoff)
sum_reg <- summary(regress)
abline(regress, col="red")
legend("topleft", paste("R^2 = ", round(sum_reg$r.squared,3)))
grid(,,"dark red")
dev.off()
#  Capture information about the regression for the final report
line1 <- paste("\\","begin{verbatim}",sep="")
write(line1, file="n1_vs_n2_eng1.tex")
capture.output(sum_reg, file="n1_vs_n2_eng1.tex", append=TRUE)
line2 <- paste("\\","end{verbatim}",sep="")
write(line2, file="n1_vs_n2_eng1.tex", append=TRUE)
png("n1_vs_n2_eng2.png") #
with(data_takeoff, plot( N22, N12, type="l", col="blue", lwd=1.5))
regress <- lm(N12 ~ N22, data_takeoff)
sum_reg <- summary(regress)
abline(regress, col="red")
legend("topleft", paste("R^2 = ", round(sum_reg$r.squared,3)))
grid(,,"dark red")
dev.off()
#  Capture information about the regression for the final report
line1 <- paste("\\","begin{verbatim}",sep="")
write(line1, file="n1_vs_n2_eng2.tex")
capture.output(sum_reg, file="n1_vs_n2_eng2.tex", append=TRUE)
line2 <- paste("\\","end{verbatim}",sep="")
write(line2, file="n1_vs_n2_eng2.tex", append=TRUE)
N21_estimate <- lm(N21 ~ FF1 + TLA1 + SAT, data_takeoff)
N21est <- summary(N21_estimate)
line1 <- paste("\\","begin{verbatim}",sep="")
write(line1, file="N21est.tex")
capture.output(N21est, file="N21est.tex", append=TRUE)
line2 <- paste("\\","end{verbatim}",sep="")
write(line2, file="N21est.tex", append=TRUE)
N21_estimate <- lm(N21 ~ FF1 + TLA1 + SAT, data_takeoff)
N21est <- summary(N21_estimate)
line1 <- paste("\\","begin{verbatim}",sep="")
write(line1, file="N21_estimate.tex")
capture.output(N21est, file="N21_estimate.tex", append=TRUE)
line2 <- paste("\\","end{verbatim}",sep="")
write(line2, file="N21_estimate.tex", append=TRUE)
N22_estimate <- lm(N22 ~ FF2 + TLA2 + SAT, data_takeoff)
N22est <- summary(N22_estimate)
line1 <- paste("\\","begin{verbatim}",sep="")
write(line1, file="N22_estimate.tex")
capture.output(N22est, file="N22_estimate.tex", append=TRUE)
line2 <- paste("\\","end{verbatim}",sep="")
write(line2, file="N22_estimate.tex", append=TRUE)
source('~/Projects/R/flightRtools/flightRtakeoff/src/Rtoffland.R')
# Clean workspace (& environment data)
rm(list=ls(all=TRUE))
# Capture working directory
# > setwd(work_dir) ...will recover the path for the initial folder
# > setwd("nameofthefolder") ...will direct to a new folder, eg: data, output, etc.
work_dir <- getwd()
